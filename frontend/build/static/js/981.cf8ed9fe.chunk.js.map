{"version":3,"file":"static/js/981.cf8ed9fe.chunk.js","mappings":"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","sources":["places/pages/NewPlace.js","shared/components/FormElements/Button.js","shared/components/FormElements/ImageUpload.js","shared/components/FormElements/Input.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/form-hook.js","shared/hooks/http-hook.js","shared/util/validators.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './PlaceForm.css';\n\nconst NewPlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      },\n      address: {\n        value: '',\n        isValid: false\n      },\n      image: {\n        value: null,\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const history = useHistory();\n\n  const placeSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      const formData = new FormData();\n      formData.append('title', formState.inputs.title.value);\n      formData.append('description', formState.inputs.description.value);\n      formData.append('address', formState.inputs.address.value);\n      formData.append('creator', auth.userId);\n      formData.append('image', formState.inputs.image.value);\n      await sendRequest(process.env.REACT_APP_BACKEND_URL + '/places', 'POST', formData, {\n        Authorization: 'Bearer ' + auth.token\n      });\n      history.push('/');\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid title.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"description\"\n          element=\"textarea\"\n          label=\"Description\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid description (at least 5 characters).\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"address\"\n          element=\"input\"\n          label=\"Address\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid address.\"\n          onInput={inputHandler}\n        />\n        <ImageUpload\n          id=\"image\"\n          onInput={inputHandler}\n          errorText=\"Please provide an image.\"\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          ADD PLACE\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewPlace;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;","import React, { useRef, useState, useEffect } from 'react';\n\nimport Button from './Button';\nimport './ImageUpload.css';\n\nconst ImageUpload = props => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickedHandler = event => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: 'none' }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && 'center'}`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {!previewUrl && <p>Please pick an image.</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid)\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          reqCtrl => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};"],"names":["NewPlace","auth","useContext","AuthContext","isLoading","error","sendRequest","clearError","useHttpClient","formState","inputHandler","useForm","title","value","isValid","description","address","image","history","useHistory","_jsxs","React","children","_jsx","ErrorModal","onClear","className","onSubmit","async","event","preventDefault","formData","FormData","append","inputs","userId","process","Authorization","token","push","err","LoadingSpinner","asOverlay","Input","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","VALIDATOR_MINLENGTH","ImageUpload","Button","disabled","props","href","size","inverse","danger","to","Link","exact","onClick","file","setFile","useState","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","onChange","pickedFile","fileIsValid","target","files","length","center","src","alt","pickImageHandler","current","click","inputReducer","state","action","val","validate","isTouched","inputState","dispatch","useReducer","initialValue","initialValid","changeHandler","touchHandler","placeholder","onBlur","rows","htmlFor","Modal","onCancel","header","show","footer","ModalOverlay","content","headerClass","contentClass","footerClass","ReactDOM","document","getElementById","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","initialInputs","initialFormValidity","useCallback","inputData","formValidity","setIsLoading","setError","activeHttpRequests","url","method","arguments","undefined","body","headers","httpAbortCtrl","AbortController","response","fetch","signal","responseData","json","filter","reqCtrl","ok","Error","message","forEach","abortCtrl","abort","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","validator","trim","test"],"sourceRoot":""}