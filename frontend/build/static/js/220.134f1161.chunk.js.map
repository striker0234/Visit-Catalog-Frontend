{"version":3,"file":"static/js/220.134f1161.chunk.js","mappings":"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","sources":["shared/components/FormElements/Button.js","shared/components/FormElements/ImageUpload.js","shared/components/FormElements/Input.js","shared/components/UIElements/Card.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/form-hook.js","shared/hooks/http-hook.js","shared/util/validators.js","user/pages/Auth.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;","import React, { useRef, useState, useEffect } from 'react';\n\nimport Button from './Button';\nimport './ImageUpload.css';\n\nconst ImageUpload = props => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickedHandler = event => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: 'none' }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && 'center'}`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {!previewUrl && <p>Please pick an image.</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid)\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          reqCtrl => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};","import React, { useState, useContext } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './Auth.css';\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: '',\n        isValid: false\n      },\n      password: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined,\n          image: undefined\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: '',\n            isValid: false\n          },\n          image: {\n            value: null,\n            isValid: false\n          }\n        },\n        false\n      );\n    }\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL+'/users/login',\n          'POST',\n          JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          }),\n          {\n            'Content-Type': 'application/json'\n          }\n        );\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    } else {\n      try {\n        const formData = new FormData();\n        formData.append('email', formState.inputs.email.value);\n        formData.append('name', formState.inputs.name.value);\n        formData.append('password', formState.inputs.password.value);\n        formData.append('image', formState.inputs.image.value);\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + '/users/signup',\n          'POST',\n          formData\n        );\n\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Card className=\"authentication\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        <h2>Login Required</h2>\n        <hr />\n        <form onSubmit={authSubmitHandler}>\n          {!isLoginMode && (\n            <Input\n              element=\"input\"\n              id=\"name\"\n              type=\"text\"\n              label=\"Your Name\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a name.\"\n              onInput={inputHandler}\n            />\n          )}\n          {!isLoginMode && (\n            <ImageUpload\n              center\n              id=\"image\"\n              onInput={inputHandler}\n              errorText=\"Please provide an image.\"\n            />\n          )}\n          <Input\n            element=\"input\"\n            id=\"email\"\n            type=\"email\"\n            label=\"E-Mail\"\n            validators={[VALIDATOR_EMAIL()]}\n            errorText=\"Please enter a valid email address.\"\n            onInput={inputHandler}\n          />\n          <Input\n            element=\"input\"\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(6)]}\n            errorText=\"Please enter a valid password, at least 6 characters.\"\n            onInput={inputHandler}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            {isLoginMode ? 'LOGIN' : 'SIGNUP'}\n          </Button>\n        </form>\n        <Button inverse onClick={switchModeHandler}>\n          SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n        </Button>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default Auth;"],"names":["props","href","_jsx","className","size","inverse","danger","children","to","Link","exact","type","onClick","disabled","file","setFile","useState","previewUrl","setPreviewUrl","isValid","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","_jsxs","id","ref","style","display","accept","onChange","event","pickedFile","fileIsValid","target","files","length","onInput","center","src","alt","Button","pickImageHandler","current","click","errorText","inputReducer","state","action","value","val","validate","validators","isTouched","inputState","dispatch","useReducer","initialValue","initialValid","changeHandler","touchHandler","element","placeholder","onBlur","rows","htmlFor","label","Modal","onCancel","onClear","header","show","error","footer","ModalOverlay","content","headerClass","onSubmit","preventDefault","contentClass","footerClass","ReactDOM","document","getElementById","React","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","useHttpClient","isLoading","setIsLoading","setError","activeHttpRequests","sendRequest","async","url","method","arguments","undefined","body","headers","httpAbortCtrl","AbortController","push","response","fetch","signal","responseData","json","filter","reqCtrl","ok","Error","message","err","forEach","abortCtrl","abort","clearError","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","VALIDATOR_EMAIL","validator","trim","test","Auth","auth","useContext","AuthContext","isLoginMode","setIsLoginMode","inputHandler","setFormData","email","password","ErrorModal","Card","LoadingSpinner","asOverlay","process","JSON","stringify","login","userId","token","formData","FormData","append","name","image","Input","ImageUpload","switchModeHandler","prevMode"],"sourceRoot":""}