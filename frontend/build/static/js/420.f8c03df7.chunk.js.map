{"version":3,"file":"static/js/420.f8c03df7.chunk.js","mappings":"yLAIA,MAuBA,EAvBYA,IACV,MAAMC,GAASC,EAAAA,EAAAA,WAET,OAAEC,EAAM,KAAEC,GAASJ,EAWzB,OATAK,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAM,IAAIC,OAAOC,OAAOC,KAAKC,IAAIT,EAAOU,QAAS,CACrDR,OAAQA,EACRC,KAAMA,IAGR,IAAIG,OAAOC,OAAOC,KAAKG,OAAO,CAAEC,SAAUV,EAAQG,IAAKA,GAAM,GAC5D,CAACH,EAAQC,KAGVU,EAAAA,EAAAA,KAAA,OACEC,IAAKd,EACLe,UAAW,OAAOhB,EAAMgB,YACxBC,MAAOjB,EAAMiB,OACR,E,wCCXX,MAoGA,EApGkBjB,IAChB,MAAM,UAAEkB,EAAS,MAAEC,EAAK,YAAEC,EAAW,WAAEC,IAAeC,EAAAA,EAAAA,KAChDC,GAAOC,EAAAA,EAAAA,YAAWC,EAAAA,IACjBC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAChCC,EAAkBC,IAAuBF,EAAAA,EAAAA,WAAS,GAInDG,EAAkBA,IAAMJ,GAAW,GAMnCK,EAAsBA,KAC1BF,GAAoB,EAAM,EAkB5B,OACEG,EAAAA,EAAAA,MAACC,EAAAA,SAAc,CAAAC,SAAA,EACbrB,EAAAA,EAAAA,KAACsB,EAAAA,EAAU,CAACjB,MAAOA,EAAOkB,QAAShB,KACnCP,EAAAA,EAAAA,KAACwB,EAAAA,EAAK,CACJC,KAAMb,EACNc,SAAUT,EACVU,OAAQzC,EAAM0C,QACdC,aAAa,4BACbC,YAAY,4BACZC,QAAQ/B,EAAAA,EAAAA,KAACgC,EAAAA,EAAM,CAACC,QAAShB,EAAgBI,SAAC,UAAeA,UAEzDrB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,gBAAemB,UAC5BrB,EAAAA,EAAAA,KAACJ,EAAG,CAACP,OAAQH,EAAMgD,YAAa5C,KAAM,UAG1CU,EAAAA,EAAAA,KAACwB,EAAAA,EAAK,CACJC,KAAMV,EACNW,SAAUR,EACVS,OAAO,gBACPG,YAAY,4BACZC,QACEZ,EAAAA,EAAAA,MAACC,EAAAA,SAAc,CAAAC,SAAA,EACbrB,EAAAA,EAAAA,KAACgC,EAAAA,EAAM,CAACG,SAAO,EAACF,QAASf,EAAoBG,SAAC,YAG9CrB,EAAAA,EAAAA,KAACgC,EAAAA,EAAM,CAACI,QAAM,EAACH,QAxCII,UAC3BrB,GAAoB,GACpB,UACQV,EACJ,oCAA+CpB,EAAMoD,KACrD,SACA,KACA,CACEC,cAAgB,UAAY9B,EAAK+B,QAGrCtD,EAAMuD,SAASvD,EAAMoD,GACvB,CAAE,MAAOI,GAAM,GA4BsCrB,SAAC,cAIjDA,UAEDrB,EAAAA,EAAAA,KAAA,KAAAqB,SAAG,qGAKLrB,EAAAA,EAAAA,KAAA,MAAIE,UAAU,aAAYmB,UACxBF,EAAAA,EAAAA,MAACwB,EAAAA,EAAI,CAACzC,UAAU,sBAAqBmB,SAAA,CAClCjB,IAAaJ,EAAAA,EAAAA,KAAC4C,EAAAA,EAAc,CAACC,WAAS,KACvC7C,EAAAA,EAAAA,KAAA,OAAKE,UAAU,oBAAmBmB,UAChCrB,EAAAA,EAAAA,KAAA,OAAK8C,IAAK,yBAAsC5D,EAAM6D,QAASC,IAAK9D,EAAM+D,WAE5E9B,EAAAA,EAAAA,MAAA,OAAKjB,UAAU,mBAAkBmB,SAAA,EAC/BrB,EAAAA,EAAAA,KAAA,MAAAqB,SAAKnC,EAAM+D,SACXjD,EAAAA,EAAAA,KAAA,MAAAqB,SAAKnC,EAAM0C,WACX5B,EAAAA,EAAAA,KAAA,KAAAqB,SAAInC,EAAMgE,kBAEZ/B,EAAAA,EAAAA,MAAA,OAAKjB,UAAU,sBAAqBmB,SAAA,EAClCrB,EAAAA,EAAAA,KAACgC,EAAAA,EAAM,CAACG,SAAO,EAACF,QA3EHkB,IAAMtC,GAAW,GA2EUQ,SAAC,gBAGxCZ,EAAK2C,SAAWlE,EAAMmE,YACrBrD,EAAAA,EAAAA,KAACgC,EAAAA,EAAM,CAACsB,GAAI,WAAWpE,EAAMoD,KAAKjB,SAAC,SAGpCZ,EAAK2C,SAAWlE,EAAMmE,YACrBrD,EAAAA,EAAAA,KAACgC,EAAAA,EAAM,CAACI,QAAM,EAACH,QA/EMsB,KAC/BvC,GAAoB,EAAK,EA8EkCK,SAAC,qBAO3C,ECtErB,EA/BkBnC,GACW,IAAvBA,EAAMsE,MAAMC,QAEZzD,EAAAA,EAAAA,KAAA,OAAKE,UAAU,oBAAmBmB,UAChCF,EAAAA,EAAAA,MAACwB,EAAAA,EAAI,CAAAtB,SAAA,EACHrB,EAAAA,EAAAA,KAAA,MAAAqB,SAAI,wCACJrB,EAAAA,EAAAA,KAACgC,EAAAA,EAAM,CAACsB,GAAG,cAAajC,SAAC,sBAO/BrB,EAAAA,EAAAA,KAAA,MAAIE,UAAU,aAAYmB,SACvBnC,EAAMsE,MAAMhE,KAAIkE,IACf1D,EAAAA,EAAAA,KAAC2D,EAAS,CAERrB,GAAIoB,EAAMpB,GACVS,MAAOW,EAAMX,MACbE,MAAOS,EAAMT,MACbC,YAAaQ,EAAMR,YACnBtB,QAAS8B,EAAM9B,QACfyB,UAAWK,EAAME,QACjB1B,YAAawB,EAAMG,SACnBpB,SAAUvD,EAAM4E,eARXJ,EAAMpB,QCwBrB,EAvCmByB,KACjB,MAAOC,EAAcC,IAAmBnD,EAAAA,EAAAA,aAClC,UAAEV,EAAS,MAAEC,EAAK,YAAEC,EAAW,WAAEC,IAAeC,EAAAA,EAAAA,KAEhD4C,GAASc,EAAAA,EAAAA,KAAYd,QAE3B7D,EAAAA,EAAAA,YAAU,KACY8C,WAClB,IACE,MAAM8B,QAAqB7D,EACzB,yCAAoD8C,KAEtDa,EAAgBE,EAAaC,OAC/B,CAAE,MAAO1B,GAAM,GAEjB2B,EAAa,GACZ,CAAC/D,EAAa8C,IAQjB,OACEjC,EAAAA,EAAAA,MAACC,EAAAA,SAAc,CAAAC,SAAA,EACbrB,EAAAA,EAAAA,KAACsB,EAAAA,EAAU,CAACjB,MAAOA,EAAOkB,QAAShB,IAClCH,IACCJ,EAAAA,EAAAA,KAAA,OAAKE,UAAU,SAAQmB,UACrBrB,EAAAA,EAAAA,KAAC4C,EAAAA,EAAc,OAGjBxC,GAAa4D,IACbhE,EAAAA,EAAAA,KAACsE,EAAS,CAACd,MAAOQ,EAAcF,cAfVS,IAC1BN,GAAgBO,GACdA,EAAWC,QAAOf,GAASA,EAAMpB,KAAOiC,KACzC,MAcgB,C,6DCtCrB,MAqCA,EArCerF,GACTA,EAAMwF,MAEN1E,EAAAA,EAAAA,KAAA,KACEE,UAAW,kBAAkBhB,EAAMyF,MAAQ,aAAazF,EAAMiD,SAC5D,qBAAqBjD,EAAMkD,QAAU,mBACvCsC,KAAMxF,EAAMwF,KAAKrD,SAEhBnC,EAAMmC,WAITnC,EAAMoE,IAENtD,EAAAA,EAAAA,KAAC4E,EAAAA,GAAI,CACHtB,GAAIpE,EAAMoE,GACVuB,MAAO3F,EAAM2F,MACb3E,UAAW,kBAAkBhB,EAAMyF,MAAQ,aAAazF,EAAMiD,SAC5D,qBAAqBjD,EAAMkD,QAAU,mBAAmBf,SAEzDnC,EAAMmC,YAKXrB,EAAAA,EAAAA,KAAA,UACEE,UAAW,kBAAkBhB,EAAMyF,MAAQ,aAAazF,EAAMiD,SAC5D,qBAAqBjD,EAAMkD,QAAU,mBACvC0C,KAAM5F,EAAM4F,KACZ7C,QAAS/C,EAAM+C,QACf8C,SAAU7F,EAAM6F,SAAS1D,SAExBnC,EAAMmC,U,oDCjCb,MAQA,EARanC,IAETc,EAAAA,EAAAA,KAAA,OAAKE,UAAW,QAAQhB,EAAMgB,YAAaC,MAAOjB,EAAMiB,MAAMkB,SAC3DnC,EAAMmC,U,sECFb,MAaA,EAbmBnC,IAEfc,EAAAA,EAAAA,KAACwB,EAAAA,EAAK,CACJE,SAAUxC,EAAMqC,QAChBI,OAAO,qBACPF,OAAQvC,EAAMmB,MACd0B,QAAQ/B,EAAAA,EAAAA,KAACgC,EAAAA,EAAM,CAACC,QAAS/C,EAAMqC,QAAQF,SAAC,SAAcA,UAEtDrB,EAAAA,EAAAA,KAAA,KAAAqB,SAAInC,EAAMmB,S,+ECNhB,MAAM2E,EAAe9F,IACnB,MAAM+F,GACJ9D,EAAAA,EAAAA,MAAA,OAAKjB,UAAW,SAAShB,EAAMgB,YAAaC,MAAOjB,EAAMiB,MAAMkB,SAAA,EAC7DrB,EAAAA,EAAAA,KAAA,UAAQE,UAAW,iBAAiBhB,EAAMgG,cAAc7D,UACtDrB,EAAAA,EAAAA,KAAA,MAAAqB,SAAKnC,EAAMyC,YAEbR,EAAAA,EAAAA,MAAA,QACEgE,SACEjG,EAAMiG,SAAWjG,EAAMiG,SAAWC,GAASA,EAAMC,iBAClDhE,SAAA,EAEDrB,EAAAA,EAAAA,KAAA,OAAKE,UAAW,kBAAkBhB,EAAM2C,eAAeR,SACpDnC,EAAMmC,YAETrB,EAAAA,EAAAA,KAAA,UAAQE,UAAW,iBAAiBhB,EAAM4C,cAAcT,SACrDnC,EAAM6C,eAKf,OAAOuD,EAAAA,aAAsBL,EAASM,SAASC,eAAe,cAAc,EAoB9E,EAjBctG,IAEViC,EAAAA,EAAAA,MAACC,EAAAA,SAAc,CAAAC,SAAA,CACZnC,EAAMuC,OAAQzB,EAAAA,EAAAA,KAACyF,EAAAA,EAAQ,CAACxD,QAAS/C,EAAMwC,YACxC1B,EAAAA,EAAAA,KAAC0F,EAAAA,EAAa,CACZC,GAAIzG,EAAMuC,KACVmE,cAAY,EACZC,eAAa,EACbC,QAAS,IACTC,WAAW,QAAO1E,UAElBrB,EAAAA,EAAAA,KAACgF,EAAY,IAAK9F,Q,6CCvCnB,MAAMsB,EAAgBA,KAC3B,MAAOJ,EAAW4F,IAAgBlF,EAAAA,EAAAA,WAAS,IACpCT,EAAO4F,IAAYnF,EAAAA,EAAAA,YAEpBoF,GAAqB9G,EAAAA,EAAAA,QAAO,IAE5BkB,GAAc6F,EAAAA,EAAAA,cAClB9D,eAAO+D,GAAoD,IAA/CC,EAAMC,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAAG,MAAOE,EAAIF,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAAG,KAAMG,EAAOH,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAClDN,GAAa,GACb,MAAMU,EAAgB,IAAIC,gBAC1BT,EAAmBrG,QAAQ+G,KAAKF,GAEhC,IACE,MAAMG,QAAiBC,MAAMV,EAAK,CAChCC,SACAG,OACAC,UACAM,OAAQL,EAAcK,SAGlB5C,QAAqB0C,EAASG,OAMpC,GAJAd,EAAmBrG,QAAUqG,EAAmBrG,QAAQ4E,QACtDwC,GAAWA,IAAYP,KAGpBG,EAASK,GACZ,MAAM,IAAIC,MAAMhD,EAAaiD,SAI/B,OADApB,GAAa,GACN7B,CACT,CAAE,MAAOzB,GAGP,MAFAuD,EAASvD,EAAI0E,SACbpB,GAAa,GACPtD,CACR,CACF,GACA,IAcF,OAPAnD,EAAAA,EAAAA,YAAU,IACD,KAEL2G,EAAmBrG,QAAQwH,SAAQC,GAAaA,EAAUC,SAAQ,GAEnE,IAEI,CAAEnH,YAAWC,QAAOC,cAAaC,WAXrBA,KACjB0F,EAAS,KAAK,EAUoC,C","sources":["shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js","shared/components/FormElements/Button.js","shared/components/UIElements/Card.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/http-hook.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\n\nimport './Map.css';\n\nconst Map = props => {\n  const mapRef = useRef();\n  \n  const { center, zoom } = props;\n\n  useEffect(() => {\n    const map = new window.google.maps.Map(mapRef.current, {\n      center: center,\n      zoom: zoom\n    });\n  \n    new window.google.maps.Marker({ position: center, map: map });\n  }, [center, zoom]);  \n\n  return (\n    <div\n      ref={mapRef}\n      className={`map ${props.className}`}\n      style={props.style}\n    ></div>\n  );\n};\n\nexport default Map;","import React, { useState, useContext } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Button from '../../shared/components/FormElements/Button';\nimport Modal from '../../shared/components/UIElements/Modal';\nimport Map from '../../shared/components/UIElements/Map';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport './PlaceItem.css';\n\nconst PlaceItem = props => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const auth = useContext(AuthContext);\n  const [showMap, setShowMap] = useState(false);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  const openMapHandler = () => setShowMap(true);\n\n  const closeMapHandler = () => setShowMap(false);\n\n  const showDeleteWarningHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelDeleteHandler = () => {\n    setShowConfirmModal(false);\n  };\n\n  const confirmDeleteHandler = async () => {\n    setShowConfirmModal(false);\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/places/${props.id}`,\n        'DELETE',\n        null,\n        {\n          Authorization : 'Bearer ' + auth.token\n        }\n      );\n      props.onDelete(props.id);\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Modal\n        show={showMap}\n        onCancel={closeMapHandler}\n        header={props.address}\n        contentClass=\"place-item__modal-content\"\n        footerClass=\"place-item__modal-actions\"\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\n      >\n        <div className=\"map-container\">\n          <Map center={props.coordinates} zoom={16} />\n        </div>\n      </Modal>\n      <Modal\n        show={showConfirmModal}\n        onCancel={cancelDeleteHandler}\n        header=\"Are you sure?\"\n        footerClass=\"place-item__modal-actions\"\n        footer={\n          <React.Fragment>\n            <Button inverse onClick={cancelDeleteHandler}>\n              CANCEL\n            </Button>\n            <Button danger onClick={confirmDeleteHandler}>\n              DELETE\n            </Button>\n          </React.Fragment>\n        }\n      >\n        <p>\n          Do you want to proceed and delete this place? Please note that it\n          can't be undone thereafter.\n        </p>\n      </Modal>\n      <li className=\"place-item\">\n        <Card className=\"place-item__content\">\n          {isLoading && <LoadingSpinner asOverlay />}\n          <div className=\"place-item__image\">\n            <img src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.title} />\n          </div>\n          <div className=\"place-item__info\">\n            <h2>{props.title}</h2>\n            <h3>{props.address}</h3>\n            <p>{props.description}</p>\n          </div>\n          <div className=\"place-item__actions\">\n            <Button inverse onClick={openMapHandler}>\n              VIEW ON MAP\n            </Button>\n            {auth.userId === props.creatorId && (\n              <Button to={`/places/${props.id}`}>EDIT</Button>\n            )}\n\n            {auth.userId === props.creatorId && (\n              <Button danger onClick={showDeleteWarningHandler}>\n                DELETE\n              </Button>\n            )}\n          </div>\n        </Card>\n      </li>\n    </React.Fragment>\n  );\n};\n\nexport default PlaceItem;","import React from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport PlaceItem from './PlaceItem';\nimport Button from '../../shared/components/FormElements/Button';\nimport './PlaceList.css';\n\nconst PlaceList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"place-list center\">\n        <Card>\n          <h2>No places found. Maybe create one?</h2>\n          <Button to=\"/places/new\">Share Place</Button>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"place-list\">\n      {props.items.map(place => (\n        <PlaceItem\n          key={place.id}\n          id={place.id}\n          image={place.image}\n          title={place.title}\n          description={place.description}\n          address={place.address}\n          creatorId={place.creator}\n          coordinates={place.location}\n          onDelete={props.onDeletePlace}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default PlaceList;","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport PlaceList from '../components/PlaceList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst UserPlaces = () => {\n  const [loadedPlaces, setLoadedPlaces] = useState();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const userId = useParams().userId;\n\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\n        );\n        setLoadedPlaces(responseData.places);\n      } catch (err) {}\n    };\n    fetchPlaces();\n  }, [sendRequest, userId]);\n\n  const placeDeletedHandler = deletedPlaceId => {\n    setLoadedPlaces(prevPlaces =>\n      prevPlaces.filter(place => place.id !== deletedPlaceId)\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedPlaces && (\n        <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UserPlaces;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          reqCtrl => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};"],"names":["props","mapRef","useRef","center","zoom","useEffect","map","window","google","maps","Map","current","Marker","position","_jsx","ref","className","style","isLoading","error","sendRequest","clearError","useHttpClient","auth","useContext","AuthContext","showMap","setShowMap","useState","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","_jsxs","React","children","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","coordinates","inverse","danger","async","id","Authorization","token","onDelete","err","Card","LoadingSpinner","asOverlay","src","image","alt","title","description","openMapHandler","userId","creatorId","to","showDeleteWarningHandler","items","length","place","PlaceItem","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","responseData","places","fetchPlaces","PlaceList","deletedPlaceId","prevPlaces","filter","href","size","Link","exact","type","disabled","ModalOverlay","content","headerClass","onSubmit","event","preventDefault","ReactDOM","document","getElementById","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","setIsLoading","setError","activeHttpRequests","useCallback","url","method","arguments","undefined","body","headers","httpAbortCtrl","AbortController","push","response","fetch","signal","json","reqCtrl","ok","Error","message","forEach","abortCtrl","abort"],"sourceRoot":""}