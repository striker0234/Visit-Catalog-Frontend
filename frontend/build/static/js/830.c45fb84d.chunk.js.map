{"version":3,"file":"static/js/830.c45fb84d.chunk.js","mappings":"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","sources":["places/pages/UpdatePlace.js","shared/components/FormElements/Button.js","shared/components/FormElements/Input.js","shared/components/UIElements/Card.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/form-hook.js","shared/hooks/http-hook.js","shared/util/validators.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './PlaceForm.css';\n\nconst UpdatePlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedPlace, setLoadedPlace] = useState();\n  const placeId = useParams().placeId;\n  const history = useHistory();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  useEffect(() => {\n    const fetchPlace = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`\n        );\n        setLoadedPlace(responseData.place);\n        setFormData(\n          {\n            title: {\n              value: responseData.place.title,\n              isValid: true\n            },\n            description: {\n              value: responseData.place.description,\n              isValid: true\n            }\n          },\n          true\n        );\n\n      } catch (err) {}\n    };\n    fetchPlace();\n  }, [sendRequest, placeId, setFormData]);\n\n  const placeUpdateSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`,\n        'PATCH',\n        JSON.stringify({\n          title: formState.inputs.title.value,\n          description: formState.inputs.description.value\n        }),\n        {\n          'Content-Type': 'application/json',\n          Authorization : 'Bearer ' + auth.token\n        }\n      );\n      history.push('/' + auth.userId + '/places');\n    } catch (err) {}\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"center\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (!loadedPlace && !error) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>Could not find place!</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {!isLoading && loadedPlace && (\n        <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\n          <Input\n            id=\"title\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Title\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid title.\"\n            onInput={inputHandler}\n            initialValue={loadedPlace.title}\n            initialValid={true}\n          />\n          <Input\n            id=\"description\"\n            element=\"textarea\"\n            label=\"Description\"\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            errorText=\"Please enter a valid description (min. 5 characters).\"\n            onInput={inputHandler}\n            initialValue={loadedPlace.description}\n            initialValid={true}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            UPDATE PLACE\n          </Button>\n        </form>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UpdatePlace;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid)\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          reqCtrl => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};"],"names":["UpdatePlace","auth","useContext","AuthContext","isLoading","error","sendRequest","clearError","useHttpClient","loadedPlace","setLoadedPlace","useState","placeId","useParams","history","useHistory","formState","inputHandler","setFormData","useForm","title","value","isValid","description","useEffect","async","responseData","place","err","fetchPlace","_jsx","className","children","LoadingSpinner","_jsxs","React","ErrorModal","onClear","onSubmit","event","preventDefault","JSON","stringify","inputs","Authorization","token","push","userId","Input","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","initialValue","initialValid","VALIDATOR_MINLENGTH","Button","disabled","Card","props","href","size","inverse","danger","to","Link","exact","onClick","inputReducer","state","action","val","validate","isTouched","inputState","dispatch","useReducer","changeHandler","target","touchHandler","placeholder","onChange","onBlur","rows","htmlFor","style","Modal","onCancel","header","show","footer","ModalOverlay","content","headerClass","contentClass","footerClass","ReactDOM","document","getElementById","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","initialInputs","initialFormValidity","useCallback","inputData","formValidity","setIsLoading","setError","activeHttpRequests","useRef","url","method","arguments","length","undefined","body","headers","httpAbortCtrl","AbortController","current","response","fetch","signal","json","filter","reqCtrl","ok","Error","message","forEach","abortCtrl","abort","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","validator","trim","test"],"sourceRoot":""}